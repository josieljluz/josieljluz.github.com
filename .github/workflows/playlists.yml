name: playlists

on:
  schedule:
    - cron: '1 3,15 * * *'  # Executa às 00:01 e 12:01 BRT
  workflow_dispatch:

permissions:
  contents: write  # Permite commit/push no repositório

jobs:
  download:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v4
      with:
        persist-credentials: false  # Desabilita credenciais padrão
        fetch-depth: 0              # Necessário para git pull/push

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Cache de dependências pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Instalar dependências
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Executar script de playlists
      run: python playlists.py

    - name: Adicionar timestamp nos arquivos
      run: |
        for file in $(find playlists -type f); do
          echo "# Atualizado em $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> "$file"
        done

    - name: Verificar mudanças no Git
      id: git_status
      run: |
        if [[ -n "$(git status --porcelain playlists/)" ]]; then
          echo "changes=true" >> $GITHUB_ENV
        else
          echo "changes=false" >> $GITHUB_ENV
        fi

    - name: Commit e push se houver mudanças
      if: env.changes == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.PLAYLISTS_GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add playlists/
        git commit -m "Atualização automática dos arquivos baixados"
        git pull origin main --no-rebase || true
        git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git main

    - name: Exibir arquivos finais
      run: ls -la playlists

    - name: Notificar sucesso
      if: success()
      run: echo "Workflow executado com sucesso!"

    - name: Notificar falha
      if: failure()
      run: echo "Workflow falhou!"
